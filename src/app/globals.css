@import "tailwindcss";

:root {
  --background: 255 255 255;
  --foreground: 23 23 23;
  --muted: 245 245 245;
  --card: 255 255 255;
  --border: 228 228 231;
}

.dark {
  /* Refined dark palette */
  --background: 12 14 18; /* near-black with a hint of blue */
  --foreground: 232 234 237; /* soft white */
  --muted: 20 23 28; /* panels */
  --card: 16 18 23; /* cards */
  --border: 36 42 50; /* subtle cool border */
}

@theme inline {
  --color-background: rgb(var(--background));
  --color-foreground: rgb(var(--foreground));
  --color-muted: rgb(var(--muted));
  --color-card: rgb(var(--card));
  --color-border: rgb(var(--border));
  --font-sans: var(--font-sans);
}

* {
  box-sizing: border-box;
}

html, body {
  height: 100%;
}

body {
  background: rgb(var(--background));
  color: rgb(var(--foreground));
  font-family: var(--font-sans);
}

.glass {
  background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.06) 0%,
      rgba(255, 255, 255, 0.02) 100%
    );
  border: 1px solid rgba(148, 163, 184, 0.18);
  backdrop-filter: blur(12px);
}

.dark body {
  background: rgb(var(--background));
}

.dark .glass {
  border-color: rgba(36, 42, 50, 0.6);
}

@keyframes blobFloat1 {
  0% { transform: translate3d(0,0,0) scale(1); }
  50% { transform: translate3d(20px,-30px,0) scale(1.05); }
  100% { transform: translate3d(0,0,0) scale(1); }
}

@keyframes blobFloat2 {
  0% { transform: translate3d(0,0,0) scale(1); }
  50% { transform: translate3d(-25px,25px,0) scale(0.98); }
  100% { transform: translate3d(0,0,0) scale(1); }
}

@keyframes blobFloat3 {
  0% { transform: translate3d(0,0,0) scale(1); }
  50% { transform: translate3d(30px,15px,0) scale(1.03); }
  100% { transform: translate3d(0,0,0) scale(1); }
}

.mesh-blob {
  position: absolute;
  border-radius: 9999px;
  filter: blur(40px);
  opacity: 0.32;
  mix-blend-mode: screen;
}

.mesh-blob--1 { animation: blobFloat1 18s ease-in-out infinite; }
.mesh-blob--2 { animation: blobFloat2 22s ease-in-out infinite; }
.mesh-blob--3 { animation: blobFloat3 26s ease-in-out infinite; }
